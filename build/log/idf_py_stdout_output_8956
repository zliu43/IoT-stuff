[1/9] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D C:\Users\mikel\ESP32\BLINK182\build\bootloader\esp-idf\esptool_py && C:\Users\mikel\.espressif\python_env\idf5.3_py3.11_env\Scripts\python.exe C:/Users/mikel/esp-adf/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x0 C:/Users/mikel/ESP32/BLINK182/build/bootloader/bootloader.bin"
Bootloader binary size 0x5260 bytes. 0x2da0 bytes (36%) free.
[2/7] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/blink_example_main.c.obj
[3/7] Linking C static library esp-idf\main\libmain.a
[4/7] Generating ld/sections.ld
[5/7] Linking CXX executable BLINK182.elf
[6/7] Generating binary image from built executable
esptool.py v4.8.1
Creating esp32s3 image...
Merged 2 ELF sections
Successfully created esp32s3 image.
Generated C:/Users/mikel/ESP32/BLINK182/build/BLINK182.bin
[7/7] cmd.exe /C "cd /D C:\Users\mikel\ESP32\BLINK182\build\esp-idf\esptool_py && C:\Users\mikel\.espressif\python_env\idf5.3_py3.11_env\Scripts\python.exe C:/Users/mikel/esp-adf/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app C:/Users/mikel/ESP32/BLINK182/build/partition_table/partition-table.bin C:/Users/mikel/ESP32/BLINK182/build/BLINK182.bin"
BLINK182.bin binary size 0x3aa90 bytes. Smallest app partition is 0x100000 bytes. 0xc5570 bytes (77%) free.
